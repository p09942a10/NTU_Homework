{"remainingRequest":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kevin/Kevin/Kevin's Website/Kevin's Page/src/views/login-model/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/src/views/login-model/login.vue","mtime":1603003588481},{"path":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport logo from '../../assets/Kevin/logo.png'\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        account: '',\n        password: ''\n      },\n      loginRules: {\n        account: [\n          { required: true, message: 'Please enter the account', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: 'Please enter the password', trigger: 'blur' },\n          { min: 3, max: 30, message: 'Length between 3 ~ 30 characters', required: true, trigger: 'blur' }\n        ]\n      },\n      loading: false,\n      passwordType: 'password',\n      redirect: undefined,\n      logo: logo\n    }\n  },\n  watch: {\n    $route: {\n      handler: function(route) {\n        this.redirect = route.query && route.query.redirect\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    showPwd() {\n      if (this.passwordType === 'password') {\n        this.passwordType = ''\n      } else {\n        this.passwordType = 'password'\n      }\n      this.$nextTick(() => {\n        this.$refs.password.focus()\n      })\n    },\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.$store.dispatch('user/login', this.loginForm).then(() => {\n            this.$router.push({ path: this.redirect || '/' })\n            this.loading = false\n          }).catch(() => {\n            this.loading = false\n          })\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    }\n  }\n}\n",null]}