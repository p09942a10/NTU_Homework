{"remainingRequest":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/thread-loader/dist/cjs.js!/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/babel-loader/lib/index.js!/Users/kevin/Kevin/Kevin's Website/Kevin's Page/src/main.js","dependencies":[{"path":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/src/main.js","mtime":1571194634000},{"path":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/core-js/modules/es6.array.iterator.js\";\nimport \"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/core-js/modules/es6.promise.js\";\nimport \"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/core-js/modules/es6.object.assign.js\";\nimport \"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/core-js/modules/es7.promise.finally.js\";\nimport Vue from 'vue';\nimport 'normalize.css/normalize.css'; // A modern alternative to CSS resets\n\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport locale from 'element-ui/lib/locale/lang/en'; // lang i18n\n\nimport '@/styles/index.scss'; // global css\n\nimport App from \"./App\";\nimport store from \"./store\";\nimport router from \"./router\";\nimport '@/icons'; // icon\n\nimport '@/permission'; // permission control\n\nimport 'element-ui/lib/theme-chalk/display.css';\nimport echarts from 'echarts'; // import echart\n\nVue.use(echarts);\nVue.prototype.$echarts = echarts;\n/**\n * If you don't want to use mock-server\n * you want to use MockJs for mock api\n * you can execute: mockXHR()\n *\n * Currently MockJs will be used in the production environment,\n * please remove it before going online! ! !\n */\n\n/* import { mockXHR } from '../mock'\nif (process.env.NODE_ENV === 'production') {\n  mockXHR()\n}*/\n// set ElementUI lang to EN\n\nVue.use(ElementUI, {\n  locale: locale\n});\nVue.config.productionTip = false;\nnew Vue({\n  el: '#app',\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  }\n}); // 自建方法，在輸入<el-input v-enter-number/>便可僅輸入數字，在拼音輸入法時候會出現問題，因此加上validate\n\nVue.directive('enterNumber', {\n  inserted: function inserted(el) {\n    el.addEventListener('keypress', function (e) {\n      e = e || window.event;\n      var charcode = typeof e.charCode === 'number' ? e.charCode : e.keyCode;\n      var re = /\\d/;\n\n      if (!re.test(String.fromCharCode(charcode)) && charcode > 9 && !e.ctrlKey) {\n        if (e.preventDefault) {\n          e.preventDefault();\n        } else {\n          e.returnValue = false;\n        }\n      }\n    });\n  }\n});",null]}