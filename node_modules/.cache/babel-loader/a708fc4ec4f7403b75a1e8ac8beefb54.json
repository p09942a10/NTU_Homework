{"remainingRequest":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/thread-loader/dist/cjs.js!/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/babel-loader/lib/index.js!/Users/kevin/Kevin/Kevin's Website/Kevin's Page/src/store/modules/user.js","dependencies":[{"path":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/src/store/modules/user.js","mtime":1602996090571},{"path":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevin/Kevin/Kevin's Website/Kevin's Page/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { login as _login, logout } from '@/api/login-model';\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nimport router, { resetRouter, asyncRouterMap } from '@/router';\nvar state = {\n  token: getToken()\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_ROLE: function SET_ROLE(state, role) {\n    state.role = role;\n  }\n};\nvar actions = {\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var account = userInfo.account,\n        password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      _login({\n        account: account.trim(),\n        password: password\n      }).then(function (response) {\n        var result = response.result;\n        setToken(result.token);\n        commit('SET_TOKEN', result.token);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref2) {\n    var commit = _ref2.commit,\n        state = _ref2.state;\n    return new Promise(function (resolve, reject) {\n      commit('SET_TOKEN', '');\n      removeToken();\n      resolve();\n    });\n  },\n  // user role\n  setRole: function setRole(_ref3, role) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve) {\n      commit('SET_ROLE', role);\n      resetRouter();\n      resolve();\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",null]}